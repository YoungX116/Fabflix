

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;

/**
 * Servlet implementation class NormalSearch
 */
@WebServlet("/NormalSearch")
public class NormalSearch extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public NormalSearch() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}
	
	//function to generate the MySQL search sentence segment in boolean mode full-text search
	public static String tokenizer(String original){
		String[] tmp = new String[5];
		tmp = original.replaceAll("(\\W)", " ").trim().split("\\s+");
		for (String i : tmp) {
			System.out.print(i + " ");
		}
		System.out.println(" ");
		
		StringBuffer ft = new StringBuffer();
		for(int i=0; i<tmp.length; i++) {
			if(tmp[i].length() <= 2) {
				ft.append(tmp[i]).append("* ");
			} else {
				ft.append("+").append(tmp[i]).append("* ");
			}		
		}
		
		String ftSearch = ft.toString();
		return ftSearch;
	}

}
